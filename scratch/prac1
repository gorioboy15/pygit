'''pair with given sum in 
a sorted array

Input:
The first line of input is T 
denoting the number of 
testcase. T testcases 
follow. Each testcase 
contains three lines of 
input. The first line is the 
size of array N. The second 
line contains N elements 
separated by spaces. The 
third line contains the sum 
K.

Output:
For each testcase, print all 
the pairs such that there 
sum is equal to K.

'''
#l = [[1, 7], [2, 6], [3, 5], [5, 3], [6, 2], [7, 1]]
res = []
t = '1'
sa = '7'
ne = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
s = 6
r = []
def pairsum(ne,s):
    for e in ne:
      for n in ne:
        if e != n and e + n == s:
          r.append([e,n])
        else:
          continue
    return r

def rmsame(l): # to eliminate same numbers in list
    fin = []
    for n in l:
        for s1 in l:
            if n != s1:
                s1.reverse()
                if n == s1:
                    res.append(n)
                else:
                    continue
            else:
                continue
    for i in res:
        fin.append(''.join(str(i).strip('[]').replace(' ','') + ','+ str(s))) # convert to string and to print them by row
    return fin

#print(r)
# result = rmsame(pairsum(ne,s))
# print(result)
for i in rmsame(pairsum(ne,s)):
    print(i)


