'''pair with given sum in 
a sorted array

Input:
The first line of input is T 
denoting the number of 
testcase. T testcases 
follow. Each testcase 
contains three lines of 
input. The first line is the 
size of array N. The second 
line contains N elements 
separated by spaces. The 
third line contains the sum 
K.

Output:
For each testcase, print all 
the pairs such that there 
sum is equal to K.

'''
#l = [[1, 7], [2, 6], [3, 5], [5, 3], [6, 2], [7, 1]]
#res = []
#t = '2'
#sa = '7'
#ne = '1 2 3 4 5 6 7 8 9 10'
#s = '5'
r = []
def pairsum(sa,ne,s):
    ne = [int(i) for i in ne.split(' ')]
    s = int(s)
    for e in range(int(sa)):
      for e1 in ne:
        if ne[e] != e1 and ne[e] + e1 == s:
          r.append([ne[e],e1])
        else:
          continue
    return r

def rmsame(l): # to eliminate same numbers in list
    fin = []
    res = []
    for n in l:
        for n1 in l:
            if n != n1:
                n1.reverse()
                if n == n1:
                    res.append(n)
                else:
                    continue
            else:
                continue
    #for i in res:
    #    fin.append(''.join(str(i).strip('[]').replace(' ','') + ','+ str(s))) # convert to string and to print them by row
    return res
rst=[]
t = input("T: ")
for i in range(int(t)):
    sa = input('SA: ')
    ne = input('NE: ')
    s = input('S: ')
    rst = pairsum(sa,ne,s)
    r.extend(rst)
    #rst = []

print(rmsame(r))
#print(r) 
#rmsame(pairsum(sa,ne,s))
#print(pairsum(sa,ne,s))
#for i in rmsame(pairsum(ne,s)):
   # print(i)

#print(result)

